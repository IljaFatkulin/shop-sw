{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/shop-sw/front-end/src/components/DataFetching.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport Product from \"./product/Product\";\nimport classes from \"./product/Product.module.css\";\nimport MySelect from \"./UI/select/MySelect\";\nimport product from \"./product/Product\";\nimport MyInput from \"./UI/input/MyInput\";\nimport MyButton from \"./UI/button/MyButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataFetching() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [processedProducts, setProcessedProducts] = useState([]);\n  const [selectedSort, setSelectedSort] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // const sortedProducts = getSortedProducts();\n\n  const sortedProducts = useMemo(() => {\n    console.log(\"FUNCTION WAS CALLEd\");\n    if (selectedSort) {\n      return [...products].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]));\n    }\n    return products;\n  }, [selectedSort, products]);\n\n  // const sortedProduct = useMemo(() => {\n  //     if(selectedSort) {\n  //         setProcessedProducts([...products].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort])));\n  //     }\n  // }, [selectedSort, processedProducts]);\n\n  useEffect(() => {\n    axios.get('http://localhost:8888/shop-sw/back-end/public/').then(response => {\n      setProducts(response.data);\n    });\n    // if(products.length !== processedProducts.length) {\n    //     if(selectedSort === '') {\n    //         setProcessedProducts([...products]);\n    //     } else {\n    //         sortProducts(selectedSort);\n    //     }\n    // }\n  });\n\n  const [arrayId, setArrayId] = useState([]);\n  const deleteProducts = () => {\n    let data = '';\n    arrayId.forEach(id => {\n      data += id + ',';\n    });\n    axios.delete('http://localhost:8888/shop-sw/back-end/public/${data}').then(response => {\n      return response;\n    });\n  };\n  const setIdToDelete = id => {\n    const found = arrayId.find(obj => {\n      return obj === id;\n    });\n    if (found) {\n      setArrayId(arrayId => arrayId.filter(arrayId => arrayId !== id));\n    } else {\n      setArrayId([...arrayId, id]);\n    }\n  };\n  const resetSorting = () => {\n    setSelectedSort('');\n    // setProcessedProducts([...products]);\n  };\n\n  const sortProducts = sort => {\n    setSelectedSort(sort);\n    // setProcessedProducts([...products].sort((a, b) => a[sort].localeCompare(b[sort])));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'inline-block',\n        marginRight: '66%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(MyInput, {\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        placeholder: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n        value: selectedSort,\n        onChange: sortProducts,\n        defaultValue: \"Sorting\",\n        options: [{\n          value: 'sku',\n          name: 'by SKU'\n        }, {\n          value: 'name',\n          name: 'by Name'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetSorting,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteProducts,\n      children: \"MASS DELETE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.productList,\n      children: sortedProducts.map(product => product.id != null ? /*#__PURE__*/_jsxDEV(Product, {\n        onChange: () => setIdToDelete(product.id),\n        id: product.id,\n        sku: product.sku,\n        name: product.name,\n        price: product.price,\n        productType: product.productType\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Products not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(DataFetching, \"yJvapWUqml7oeRglG6gFZl+PDOU=\");\n_c = DataFetching;\nexport default DataFetching;\nvar _c;\n$RefreshReg$(_c, \"DataFetching\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","axios","Product","classes","MySelect","product","MyInput","MyButton","jsxDEV","_jsxDEV","DataFetching","_s","products","setProducts","processedProducts","setProcessedProducts","selectedSort","setSelectedSort","searchQuery","setSearchQuery","sortedProducts","console","log","sort","a","b","localeCompare","get","then","response","data","arrayId","setArrayId","deleteProducts","forEach","id","delete","setIdToDelete","found","find","obj","filter","resetSorting","sortProducts","children","style","display","marginRight","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","options","name","onClick","className","productList","map","sku","price","productType","textAlign","_c","$RefreshReg$"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/shop-sw/front-end/src/components/DataFetching.js"],"sourcesContent":["import React, {useState, useEffect, useMemo} from \"react\";\nimport axios from \"axios\";\nimport Product from \"./product/Product\";\nimport classes from \"./product/Product.module.css\";\nimport MySelect from \"./UI/select/MySelect\";\nimport product from \"./product/Product\";\nimport MyInput from \"./UI/input/MyInput\";\nimport MyButton from \"./UI/button/MyButton\";\n\nfunction DataFetching() {\n    const [products, setProducts] = useState([]);\n    const [processedProducts, setProcessedProducts] = useState([]);\n    const [selectedSort, setSelectedSort] = useState('');\n    const [searchQuery, setSearchQuery] = useState('');\n\n    // const sortedProducts = getSortedProducts();\n\n    const sortedProducts = useMemo(() => {\n        console.log(\"FUNCTION WAS CALLEd\");\n        if(selectedSort) {\n            return [...products].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]));\n        }\n        return products;\n    }, [selectedSort, products]);\n\n    // const sortedProduct = useMemo(() => {\n    //     if(selectedSort) {\n    //         setProcessedProducts([...products].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort])));\n    //     }\n    // }, [selectedSort, processedProducts]);\n\n    useEffect(() => {\n        axios.get('http://localhost:8888/shop-sw/back-end/public/')\n            .then(response => {\n                setProducts(response.data);\n            });\n        // if(products.length !== processedProducts.length) {\n        //     if(selectedSort === '') {\n        //         setProcessedProducts([...products]);\n        //     } else {\n        //         sortProducts(selectedSort);\n        //     }\n        // }\n    });\n\n    const [arrayId, setArrayId] = useState([]);\n\n    const deleteProducts = () => {\n        let data = '';\n        arrayId.forEach(id => {\n            data += id + ',';\n        });\n\n        axios.delete('http://localhost:8888/shop-sw/back-end/public/${data}')\n            .then(response => {\n                return response\n            });\n    }\n\n    const setIdToDelete = (id) => {\n        const found = arrayId.find(obj => {\n            return obj === id;\n        });\n        if(found) {\n            setArrayId(arrayId => arrayId.filter(arrayId => arrayId !== id));\n        } else {\n            setArrayId([...arrayId, id]);\n        }\n    }\n\n    const resetSorting = () => {\n        setSelectedSort('');\n        // setProcessedProducts([...products]);\n    }\n\n    const sortProducts = (sort) => {\n        setSelectedSort(sort);\n        // setProcessedProducts([...products].sort((a, b) => a[sort].localeCompare(b[sort])));\n    }\n\n    return (\n        <div>\n            <div style={{display: 'inline-block', marginRight: '66%'}} >\n                <MyInput\n                    value={searchQuery}\n                    onChange={e => setSearchQuery(e.target.value)}\n                    placeholder=\"Search\"\n                />\n                <br/>\n                <MySelect\n                    value={selectedSort}\n                    onChange={sortProducts}\n                    defaultValue=\"Sorting\"\n                    options={[\n                        {value: 'sku', name: 'by SKU'},\n                        {value: 'name', name: 'by Name'}\n                    ]}\n                />\n                <button onClick={resetSorting}>Reset</button>\n            </div>\n            <button onClick={deleteProducts}>MASS DELETE</button>\n            <div className={classes.productList}>\n                {sortedProducts.map(\n                    product => product.id != null\n                        ?\n                        <Product onChange={() => setIdToDelete(product.id)} key={product.id} id={product.id} sku={product.sku} name={product.name} price={product.price} productType={product.productType}/>\n                        :\n                        <h1 style={{textAlign: 'center'}}>\n                            Products not found\n                        </h1>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default DataFetching"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}