{"ast":null,"code":"// import React, {useState, useEffect, useMemo} from \"react\";\n// import axios from \"axios\";\n// import Product from \"./product/Product\";\n// import classes from \"./product/Product.module.css\";\n// import ProductFilter from \"./product/ProductFilter\";\n//\n// function DataFetching() {\n//     const [products, setProducts] = useState([]);\n//     const [filter, setFilter] = useState({sort: '', search: ''})\n//     const [arrayId, setArrayId] = useState([]);\n//\n//     const sortedProducts = useMemo(() => {\n//         if(products.length > 0) {\n//             if(filter.sort) {\n//                 return [...products].sort((a, b) => a[filter.sort].localeCompare(b[filter.sort]));\n//             }\n//             return products;\n//         }\n//         return false;\n//     }, [filter.sort, products]);\n//\n//     const processedProducts = useMemo(() => {\n//         if(sortedProducts != false) {\n//             return sortedProducts.filter(product => product.name.toLowerCase().includes(filter.search.toLowerCase()));\n//         }\n//         return [];\n//     }, [filter.search, sortedProducts]);\n//\n//\n//     useEffect(() => {\n//         axios.get('http://localhost:8888/shop-sw/back-end/public/')\n//             .then(response => {\n//                 setProducts(response.data);\n//             });\n//     });\n//\n//     const deleteProducts = () => {\n//         let data = '';\n//         arrayId.forEach(id => {\n//             data += id + ',';\n//         });\n//\n//         axios.delete(`http://localhost:8888/shop-sw/back-end/public/${data}`)\n//             .then(response => {\n//                 return response\n//             });\n//     }\n//\n//     const setIdToDelete = (id) => {\n//         const found = arrayId.find(obj => {\n//             return obj === id;\n//         });\n//         if(found) {\n//             setArrayId(arrayId => arrayId.filter(arrayId => arrayId !== id));\n//         } else {\n//             setArrayId([...arrayId, id]);\n//         }\n//     }\n//\n//     return (\n//         <div>\n//             <ProductFilter\n//                 filter={filter}\n//                 setFilter={setFilter}\n//             />\n//             <button onClick={deleteProducts}>MASS DELETE</button>\n//             <div className={classes.productList}>\n//                 {processedProducts.length\n//                     ?\n//                     processedProducts.map((product) =>\n//                         <Product onChange={() => setIdToDelete(product.id)} key={product.id} id={product.id} sku={product.sku} name={product.name} price={product.price} productType={product.productType}/>\n//                     )\n//                     :\n//                     <h1 style={{textAlign: 'center'}}>\n//                         Products not found\n//                     </h1>\n//                 }\n//             </div>\n//         </div>\n//     )\n// }\n//\n// export default DataFetching","map":{"version":3,"names":[],"sources":["/Applications/XAMPP/xamppfiles/htdocs/shop-sw/front-end/src/components/DataFetching.js"],"sourcesContent":["// import React, {useState, useEffect, useMemo} from \"react\";\n// import axios from \"axios\";\n// import Product from \"./product/Product\";\n// import classes from \"./product/Product.module.css\";\n// import ProductFilter from \"./product/ProductFilter\";\n//\n// function DataFetching() {\n//     const [products, setProducts] = useState([]);\n//     const [filter, setFilter] = useState({sort: '', search: ''})\n//     const [arrayId, setArrayId] = useState([]);\n//\n//     const sortedProducts = useMemo(() => {\n//         if(products.length > 0) {\n//             if(filter.sort) {\n//                 return [...products].sort((a, b) => a[filter.sort].localeCompare(b[filter.sort]));\n//             }\n//             return products;\n//         }\n//         return false;\n//     }, [filter.sort, products]);\n//\n//     const processedProducts = useMemo(() => {\n//         if(sortedProducts != false) {\n//             return sortedProducts.filter(product => product.name.toLowerCase().includes(filter.search.toLowerCase()));\n//         }\n//         return [];\n//     }, [filter.search, sortedProducts]);\n//\n//\n//     useEffect(() => {\n//         axios.get('http://localhost:8888/shop-sw/back-end/public/')\n//             .then(response => {\n//                 setProducts(response.data);\n//             });\n//     });\n//\n//     const deleteProducts = () => {\n//         let data = '';\n//         arrayId.forEach(id => {\n//             data += id + ',';\n//         });\n//\n//         axios.delete(`http://localhost:8888/shop-sw/back-end/public/${data}`)\n//             .then(response => {\n//                 return response\n//             });\n//     }\n//\n//     const setIdToDelete = (id) => {\n//         const found = arrayId.find(obj => {\n//             return obj === id;\n//         });\n//         if(found) {\n//             setArrayId(arrayId => arrayId.filter(arrayId => arrayId !== id));\n//         } else {\n//             setArrayId([...arrayId, id]);\n//         }\n//     }\n//\n//     return (\n//         <div>\n//             <ProductFilter\n//                 filter={filter}\n//                 setFilter={setFilter}\n//             />\n//             <button onClick={deleteProducts}>MASS DELETE</button>\n//             <div className={classes.productList}>\n//                 {processedProducts.length\n//                     ?\n//                     processedProducts.map((product) =>\n//                         <Product onChange={() => setIdToDelete(product.id)} key={product.id} id={product.id} sku={product.sku} name={product.name} price={product.price} productType={product.productType}/>\n//                     )\n//                     :\n//                     <h1 style={{textAlign: 'center'}}>\n//                         Products not found\n//                     </h1>\n//                 }\n//             </div>\n//         </div>\n//     )\n// }\n//\n// export default DataFetching"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}